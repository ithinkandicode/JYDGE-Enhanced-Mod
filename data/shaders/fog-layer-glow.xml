<?xml version="1.0" encoding="UTF-8"?>

<root>
	<array id="info">
		<node id="version" value="2" />
		<node id="revision" value="2" />
	</array>

	<array id="vertex_input">
		<node id="position" semantic="POSITION" />
		<node id="color" semantic="COLOR" />
		<node id="texture_coordinate" semantic="TEXTURE_COORDINATE_0" />
	</array>

	<array id="vertex_constants">
		<node id="world" type="FLOAT4X4" semantic="WORLD_TRANSFORM" />
		<node id="world_view_proj" type="FLOAT4X4" semantic="WORLD_VIEW_PROJECTION_TRANSFORM" />
	</array>

	<array id="vertex_output">
    	<node id="position" type="FLOAT4" semantic="POSITION" />
    	<node id="texture_coordinate" type="FLOAT2" semantic="TEXTURE_COORDINATE" />
    	<node id="world_position" type="FLOAT3" />
	</array>

	<array id="pixel_constants">
    	<node id="fog_color" type="FLOAT4" />
    	<node id="fog_range" type="FLOAT4" />
	</array>

	<array id="pixel_textures">
		<node id="diffuse" type="2D" />
	</array>

	<array id="pixel_output">
		<node id="color" />
	</array>

	<array id="sources">
		<node type="vertex">
			<![CDATA[
				void main()
				{
					output.position = input.position * world_view_proj;
					output.texture_coordinate = input.texture_coordinate;
					output.world_position = (float4(input.position.xyz, 0.0f) * world).xyz;
				}
			]]>
		</node>
		<node type="pixel">
			<![CDATA[
				const float TWO_PI = 6.28318530f;

				void main()
				{
					float fog_wave_angle =
						TWO_PI * fog_range.z + input.world_position.x / 10000.0f + input.world_position.y /
							7000.0f;

					float fog_factor =
                        saturate((input.world_position.z - fog_range.x) / fog_range.y + (0.1f - 0.1f * cos(fog_wave_angle)));

					float4 diffuse_sample = sampleTexture(texture.diffuse, input.texture_coordinate);
					output.color = diffuse_sample;
					output.color.a *= (1.0f - fog_factor) * diffuse_sample.a + fog_factor * fog_color.a;
				}
			]]>
		</node>
	</array>
</root>
